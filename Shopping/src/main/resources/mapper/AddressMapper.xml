<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.zou.shopping.dao.AddressMapper">
  <resultMap id="BaseResultMap" type="cn.zou.shopping.bean.Address">
    <id column="a_id" jdbcType="BIGINT" property="aId" />
    <result column="receiver" jdbcType="VARCHAR" property="receiver" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="u_id" jdbcType="BIGINT" property="uId" />
    <result column="uptime" jdbcType="TIMESTAMP" property="uptime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    a_id, receiver, address, phone, u_id, uptime
  </sql>
  <select id="selectByExample" parameterType="cn.zou.shopping.bean.AddressExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user_address
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user_address
    where a_id = #{aId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from user_address
    where a_id = #{aId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="cn.zou.shopping.bean.AddressExample">
    delete from user_address
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.zou.shopping.bean.Address">
    insert into user_address (a_id, receiver, address, 
      phone, u_id, uptime
      )
    values (#{aId,jdbcType=BIGINT}, #{receiver,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, 
      #{phone,jdbcType=VARCHAR}, #{uId,jdbcType=BIGINT}, #{uptime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.zou.shopping.bean.Address">
    insert into user_address
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="aId != null">
        a_id,
      </if>
      <if test="receiver != null">
        receiver,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="uId != null">
        u_id,
      </if>
      <if test="uptime != null">
        uptime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="aId != null">
        #{aId,jdbcType=BIGINT},
      </if>
      <if test="receiver != null">
        #{receiver,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="uId != null">
        #{uId,jdbcType=BIGINT},
      </if>
      <if test="uptime != null">
        #{uptime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.zou.shopping.bean.AddressExample" resultType="java.lang.Long">
    select count(*) from user_address
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update user_address
    <set>
      <if test="record.aId != null">
        a_id = #{record.aId,jdbcType=BIGINT},
      </if>
      <if test="record.receiver != null">
        receiver = #{record.receiver,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null">
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null">
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.uId != null">
        u_id = #{record.uId,jdbcType=BIGINT},
      </if>
      <if test="record.uptime != null">
        uptime = #{record.uptime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update user_address
    set a_id = #{record.aId,jdbcType=BIGINT},
      receiver = #{record.receiver,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      u_id = #{record.uId,jdbcType=BIGINT},
      uptime = #{record.uptime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.zou.shopping.bean.Address">
    update user_address
    <set>
      <if test="receiver != null">
        receiver = #{receiver,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="uId != null">
        u_id = #{uId,jdbcType=BIGINT},
      </if>
      <if test="uptime != null">
        uptime = #{uptime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where a_id = #{aId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.zou.shopping.bean.Address">
    update user_address
    set receiver = #{receiver,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      u_id = #{uId,jdbcType=BIGINT},
      uptime = #{uptime,jdbcType=TIMESTAMP}
    where a_id = #{aId,jdbcType=BIGINT}
  </update>
</mapper>