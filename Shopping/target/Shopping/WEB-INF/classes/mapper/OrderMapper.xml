<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.zou.shopping.dao.OrderMapper">
  <resultMap id="BaseResultMap" type="cn.zou.shopping.bean.Order">
    <id column="o_id" jdbcType="BIGINT" property="oId" />
    <result column="order_name" jdbcType="INTEGER" property="orderName" />
    <result column="order_status" jdbcType="INTEGER" property="orderStatus" />
    <result column="target_address" jdbcType="VARCHAR" property="targetAddress" />
    <result column="telephone" jdbcType="VARCHAR" property="telephone" />
    <result column="price" jdbcType="INTEGER" property="price" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="u_id" jdbcType="BIGINT" property="uId" />
    <result column="uptime" jdbcType="TIMESTAMP" property="uptime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    o_id, order_name, order_status, target_address, telephone, price, description, u_id, 
    uptime
  </sql>
  <select id="selectByExample" parameterType="cn.zou.shopping.bean.OrderExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from order
    where o_id = #{oId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from order
    where o_id = #{oId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="cn.zou.shopping.bean.OrderExample">
    delete from order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.zou.shopping.bean.Order">
    insert into order (o_id, order_name, order_status, 
      target_address, telephone, price, 
      description, u_id, uptime
      )
    values (#{oId,jdbcType=BIGINT}, #{orderName,jdbcType=INTEGER}, #{orderStatus,jdbcType=INTEGER}, 
      #{targetAddress,jdbcType=VARCHAR}, #{telephone,jdbcType=VARCHAR}, #{price,jdbcType=INTEGER}, 
      #{description,jdbcType=VARCHAR}, #{uId,jdbcType=BIGINT}, #{uptime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.zou.shopping.bean.Order">
    insert into order
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="oId != null">
        o_id,
      </if>
      <if test="orderName != null">
        order_name,
      </if>
      <if test="orderStatus != null">
        order_status,
      </if>
      <if test="targetAddress != null">
        target_address,
      </if>
      <if test="telephone != null">
        telephone,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="uId != null">
        u_id,
      </if>
      <if test="uptime != null">
        uptime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="oId != null">
        #{oId,jdbcType=BIGINT},
      </if>
      <if test="orderName != null">
        #{orderName,jdbcType=INTEGER},
      </if>
      <if test="orderStatus != null">
        #{orderStatus,jdbcType=INTEGER},
      </if>
      <if test="targetAddress != null">
        #{targetAddress,jdbcType=VARCHAR},
      </if>
      <if test="telephone != null">
        #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=INTEGER},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="uId != null">
        #{uId,jdbcType=BIGINT},
      </if>
      <if test="uptime != null">
        #{uptime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.zou.shopping.bean.OrderExample" resultType="java.lang.Long">
    select count(*) from order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update order
    <set>
      <if test="record.oId != null">
        o_id = #{record.oId,jdbcType=BIGINT},
      </if>
      <if test="record.orderName != null">
        order_name = #{record.orderName,jdbcType=INTEGER},
      </if>
      <if test="record.orderStatus != null">
        order_status = #{record.orderStatus,jdbcType=INTEGER},
      </if>
      <if test="record.targetAddress != null">
        target_address = #{record.targetAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.telephone != null">
        telephone = #{record.telephone,jdbcType=VARCHAR},
      </if>
      <if test="record.price != null">
        price = #{record.price,jdbcType=INTEGER},
      </if>
      <if test="record.description != null">
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.uId != null">
        u_id = #{record.uId,jdbcType=BIGINT},
      </if>
      <if test="record.uptime != null">
        uptime = #{record.uptime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update order
    set o_id = #{record.oId,jdbcType=BIGINT},
      order_name = #{record.orderName,jdbcType=INTEGER},
      order_status = #{record.orderStatus,jdbcType=INTEGER},
      target_address = #{record.targetAddress,jdbcType=VARCHAR},
      telephone = #{record.telephone,jdbcType=VARCHAR},
      price = #{record.price,jdbcType=INTEGER},
      description = #{record.description,jdbcType=VARCHAR},
      u_id = #{record.uId,jdbcType=BIGINT},
      uptime = #{record.uptime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.zou.shopping.bean.Order">
    update order
    <set>
      <if test="orderName != null">
        order_name = #{orderName,jdbcType=INTEGER},
      </if>
      <if test="orderStatus != null">
        order_status = #{orderStatus,jdbcType=INTEGER},
      </if>
      <if test="targetAddress != null">
        target_address = #{targetAddress,jdbcType=VARCHAR},
      </if>
      <if test="telephone != null">
        telephone = #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=INTEGER},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="uId != null">
        u_id = #{uId,jdbcType=BIGINT},
      </if>
      <if test="uptime != null">
        uptime = #{uptime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where o_id = #{oId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.zou.shopping.bean.Order">
    update order
    set order_name = #{orderName,jdbcType=INTEGER},
      order_status = #{orderStatus,jdbcType=INTEGER},
      target_address = #{targetAddress,jdbcType=VARCHAR},
      telephone = #{telephone,jdbcType=VARCHAR},
      price = #{price,jdbcType=INTEGER},
      description = #{description,jdbcType=VARCHAR},
      u_id = #{uId,jdbcType=BIGINT},
      uptime = #{uptime,jdbcType=TIMESTAMP}
    where o_id = #{oId,jdbcType=BIGINT}
  </update>
</mapper>