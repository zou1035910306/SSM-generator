<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.zou.shopping.dao.BookMapper">
  <resultMap id="BaseResultMap" type="cn.zou.shopping.bean.Book">
    <id column="b_id" jdbcType="BIGINT" property="bId" />
    <result column="author" jdbcType="VARCHAR" property="author" />
    <result column="book_image" jdbcType="VARCHAR" property="bookImage" />
    <result column="book_name" jdbcType="VARCHAR" property="bookName" />
    <result column="book_num" jdbcType="INTEGER" property="bookNum" />
    <result column="price" jdbcType="INTEGER" property="price" />
    <result column="total_page" jdbcType="INTEGER" property="totalPage" />
    <result column="pubilshing" jdbcType="VARCHAR" property="pubilshing" />
    <result column="uptime" jdbcType="TIMESTAMP" property="uptime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    b_id, author, book_image, book_name, book_num, price, total_page, pubilshing, uptime
  </sql>
  <select id="selectByExample" parameterType="cn.zou.shopping.bean.BookExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from book
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from book
    where b_id = #{bId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from book
    where b_id = #{bId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="cn.zou.shopping.bean.BookExample">
    delete from book
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.zou.shopping.bean.Book">
    insert into book (b_id, author, book_image, 
      book_name, book_num, price, 
      total_page, pubilshing, uptime
      )
    values (#{bId,jdbcType=BIGINT}, #{author,jdbcType=VARCHAR}, #{bookImage,jdbcType=VARCHAR}, 
      #{bookName,jdbcType=VARCHAR}, #{bookNum,jdbcType=INTEGER}, #{price,jdbcType=INTEGER}, 
      #{totalPage,jdbcType=INTEGER}, #{pubilshing,jdbcType=VARCHAR}, #{uptime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.zou.shopping.bean.Book">
    insert into book
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="bId != null">
        b_id,
      </if>
      <if test="author != null">
        author,
      </if>
      <if test="bookImage != null">
        book_image,
      </if>
      <if test="bookName != null">
        book_name,
      </if>
      <if test="bookNum != null">
        book_num,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="totalPage != null">
        total_page,
      </if>
      <if test="pubilshing != null">
        pubilshing,
      </if>
      <if test="uptime != null">
        uptime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="bId != null">
        #{bId,jdbcType=BIGINT},
      </if>
      <if test="author != null">
        #{author,jdbcType=VARCHAR},
      </if>
      <if test="bookImage != null">
        #{bookImage,jdbcType=VARCHAR},
      </if>
      <if test="bookName != null">
        #{bookName,jdbcType=VARCHAR},
      </if>
      <if test="bookNum != null">
        #{bookNum,jdbcType=INTEGER},
      </if>
      <if test="price != null">
        #{price,jdbcType=INTEGER},
      </if>
      <if test="totalPage != null">
        #{totalPage,jdbcType=INTEGER},
      </if>
      <if test="pubilshing != null">
        #{pubilshing,jdbcType=VARCHAR},
      </if>
      <if test="uptime != null">
        #{uptime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.zou.shopping.bean.BookExample" resultType="java.lang.Long">
    select count(*) from book
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update book
    <set>
      <if test="record.bId != null">
        b_id = #{record.bId,jdbcType=BIGINT},
      </if>
      <if test="record.author != null">
        author = #{record.author,jdbcType=VARCHAR},
      </if>
      <if test="record.bookImage != null">
        book_image = #{record.bookImage,jdbcType=VARCHAR},
      </if>
      <if test="record.bookName != null">
        book_name = #{record.bookName,jdbcType=VARCHAR},
      </if>
      <if test="record.bookNum != null">
        book_num = #{record.bookNum,jdbcType=INTEGER},
      </if>
      <if test="record.price != null">
        price = #{record.price,jdbcType=INTEGER},
      </if>
      <if test="record.totalPage != null">
        total_page = #{record.totalPage,jdbcType=INTEGER},
      </if>
      <if test="record.pubilshing != null">
        pubilshing = #{record.pubilshing,jdbcType=VARCHAR},
      </if>
      <if test="record.uptime != null">
        uptime = #{record.uptime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update book
    set b_id = #{record.bId,jdbcType=BIGINT},
      author = #{record.author,jdbcType=VARCHAR},
      book_image = #{record.bookImage,jdbcType=VARCHAR},
      book_name = #{record.bookName,jdbcType=VARCHAR},
      book_num = #{record.bookNum,jdbcType=INTEGER},
      price = #{record.price,jdbcType=INTEGER},
      total_page = #{record.totalPage,jdbcType=INTEGER},
      pubilshing = #{record.pubilshing,jdbcType=VARCHAR},
      uptime = #{record.uptime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.zou.shopping.bean.Book">
    update book
    <set>
      <if test="author != null">
        author = #{author,jdbcType=VARCHAR},
      </if>
      <if test="bookImage != null">
        book_image = #{bookImage,jdbcType=VARCHAR},
      </if>
      <if test="bookName != null">
        book_name = #{bookName,jdbcType=VARCHAR},
      </if>
      <if test="bookNum != null">
        book_num = #{bookNum,jdbcType=INTEGER},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=INTEGER},
      </if>
      <if test="totalPage != null">
        total_page = #{totalPage,jdbcType=INTEGER},
      </if>
      <if test="pubilshing != null">
        pubilshing = #{pubilshing,jdbcType=VARCHAR},
      </if>
      <if test="uptime != null">
        uptime = #{uptime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where b_id = #{bId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.zou.shopping.bean.Book">
    update book
    set author = #{author,jdbcType=VARCHAR},
      book_image = #{bookImage,jdbcType=VARCHAR},
      book_name = #{bookName,jdbcType=VARCHAR},
      book_num = #{bookNum,jdbcType=INTEGER},
      price = #{price,jdbcType=INTEGER},
      total_page = #{totalPage,jdbcType=INTEGER},
      pubilshing = #{pubilshing,jdbcType=VARCHAR},
      uptime = #{uptime,jdbcType=TIMESTAMP}
    where b_id = #{bId,jdbcType=BIGINT}
  </update>
</mapper>